--[[ ############# 发送访问日志到kafka ############# --]]
local function send_access_log_to_kafka()
    -- 引入使用的lua模块
    local cjson = require "cjson"
    local producer = require "resty.kafka.producer"

    -- 定义kafka broker地址，ip需要和kafka的host.name配置一致
    local broker_list = {
        { host = "10.9.107.229", port = 9092 },
        { host = "10.9.191.28", port = 9092 },
        { host = "10.9.121.178", port = 9092 },
        { host = "10.9.189.83", port = 9092 },
    }

    -- 收集日志数据
    local request_method = ngx.var.request_method
    local request_args = nil
    local log_json = {}
    if "GET" == request_method then
        request_args = ngx.req.get_uri_args()
        log_json["request_from"] = request_args["request_from"]
    end
    log_json["remote_addr"] = ngx.var.remote_addr
    log_json["remote_user"] = ngx.var.remote_user
    log_json["time_local"] = ngx.var.time_local
    log_json["request"] = ngx.var.request
    log_json["uri"] = ngx.var.uri
    log_json["status"] = ngx.var.status
    log_json["body_bytes_sent"] = ngx.var.body_bytes_sent
    log_json["http_referer"] = ngx.var.http_referer
    log_json["http_user_agent"] = ngx.var.http_user_agent
    log_json["http_x_forwarded_for"] = ngx.var.http_x_forwarded_for
    log_json["host"] = ngx.var.host
    log_json["http_x_bw_request_id"] = ngx.req.get_headers()["x-bw-request-id"]
    log_json["http_x_zhi_request_id"] = ngx.req.get_headers()["x-zhi-request-id"]
    log_json["server_addr"] = "{{ ansible_ssh_host }}"
    log_json["server_port"] = ngx.var.server_port
    log_json["request_time"] = ngx.var.request_time
    log_json["upstream_response_time"] = ngx.var.upstream_response_time

    -- 将日志转换为json字符串
    local log_message = cjson.encode(log_json);
    --ngx.log(ngx.ERR, log_message)

    -- 异步生产者发送数据
    local ap = producer:new(broker_list, { producer_type = "async" })

    -- 发送日志消息,send第二个参数key,用于kafka路由控制:
    -- key为nill(空)时，一段时间向同一partition写入数据
    -- 指定key，按照key的hash写入到对应的partition
    local ok, err = ap:send("beiwo-web-access-log", nil, log_message)

    if not ok then
        ngx.log(ngx.ERR, "kafka send err:", err)
        return
    end
end

--发送访问日志到kafka
send_access_log_to_kafka()

